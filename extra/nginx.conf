# This is an example nginx configuration for running Herbert.
# It is configured to require a client certificate on the administration
# endpoints, whilst serving the other paths over standard TLS.

# Don't send nginx version in error pages & server handler
server_tokens off;


server {
    listen 80;
    server_name herbert.tazj.in; # replace
    return 301 https://$server_name$request_uri;
}

server {
    listen 443;
    server_name herbert.tazj.in; # replace
    ssl on;

    # Restrict to TLS 1.1 & 1.2
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    # Allow SSL session resumption
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 5m;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    # generate with: openssl dhparam -out /etc/nginx/ssl/dhparam.pem 2048
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";

    add_header Strict-Transport-Security "max-age=31536000;";

    # Certificate by nginx to serve Herbert
    ssl_certificate /etc/herbert.d/ssl/server.crt
    ssl_certificate_key /etc/herbert.d/ssl/server.key

    # Set this to the CA you use for administrator certificates.
    ssl_client_certificate /etc/herbert.d/ssl/admin-ca.crt

    location / {
        proxy_pass http://herbert:1212;
    }

    location /admin {
        proxy_pass http://herbert:1212;
        # This is the magical line that enables the client certificate checks
        # on the /admin routes
        ssl_verify_client on;
    }
}
